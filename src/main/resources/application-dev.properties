#开发环境
server.port=8081
#日志配置
logging.file.path=log
logging.file.name=log.log

#数据库配置
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/PDBORCL
spring.datasource.username=springboot
spring.datasource.password=123456
#mysql数据库配置
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/cloud-ida?useUnicode=yes&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=123456
#连接池的配置信息
# 使用druid连接池
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=80
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=10000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.ConnectionErrorRetryAttempts=3
#必须为false（失败后会不断请求数据库，请求在TIME-WAIT，在数据库服务重启后，所有等待请求会访问数据库），
#为true表示pool向数据库上面的重试请求连接此时失败后标记整个pool为block并close，
#就算后端数据库恢复正常也不进行重连，客户端对pool的请求都拒绝掉。false表示不会标记 pool为block，新的请求都会尝试去数据库请求connection。
#默认为false。因此，如果想让数据库和网络故障恢复之后，pool能继续请求正常资源必须把此项配置设为false）
spring.datasource.druid.BreakAfterAcquireFailure=false
#一旦重试失败后等待多久再继续重试连接，单位是毫秒
spring.datasource.druid.timeBetweenConnectErrorMillis=5000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
#是否在自动回收超时连接的时候打印连接的超时错误
spring.dataSource.logAbandoned=true
#是否自动回收超时连接
spring.dataSource.removeAbandoned=true
#超时时间(以秒数为单位)
spring.dataSource.removeAbandonedTimeout=180000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
###访问路径
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#IP白名单(没有配置或者为空，则允许所有访问)
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
# IP黑名单 (存在共同时，deny优先于allow)
spring.datasource.druid.stat-view-servlet.deny=192.168.1.73
#禁用HTML页面上的“Reset All”功能
spring.datasource.druid.stat-view-servlet.reset-enable=false
# 登录名
spring.datasource.druid.stat-view-servlet.login-username=admin
# 登录密码
spring.datasource.druid.stat-view-servlet.login-password=123456

# 配置DruidStatFilter
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.name=druidWebStatFilter
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
##redis基础配置
## 数据库设置
#spring.redis.database=0
##宿主机IP
#spring.redis.host=localhost
##端口号
#spring.redis.port=6379
##密码
#spring.redis.password=123456
## 连接超时时间 单位 ms（毫秒）
#spring.redis.timeout=3000
##redis线程池设置
## 连接池中的最大空闲连接，默认值也是8。
#spring.redis.lettuce.pool.max-idle=10
##连接池中的最小空闲连接，默认值也是0。
#spring.redis.lettuce.pool.min-idle=5
##最大连接阻塞等待时间。 如果赋值为-1，则表示不限制。
#spring.redis.lettuce.pool.max-wait=-1
## 连接池最大连接数（使用负值表示没有限制） 默认 8
#spring.redis.lettuce.pool.max-active=20
##统一时间戳格式
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
#websocket配置
webSocket.webSocketPath=/websocket
webSocket.topicPath=/topic
webSocket.userPath=/user
webSocket.userDestinationPrefix=/user
webSocket.applicationDestinationPrefixes=/app


#session超时时间
shiro.session.timeout=1800000
shiro.session.validationInterval=3600000
#验证码超时时间秒
login.verifyTTL=60
#密码过期时间,默认90天
login.password.expireDate=90

shiro.loginUrl=/login
shiro.successUrl=/
shiro.unauthorizedUrl=/unauthorized

cas.server.url.prefix=http://127.0.0.1
cas.server.loginUrl=http://127.0.0.1/login
cas.server.logoutUrl=http://127.0.0.1/logout